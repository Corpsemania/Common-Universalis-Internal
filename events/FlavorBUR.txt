#1559.5.12 - New bishoprics in the Lowlands create an outrage
#1565.1.1 - Letters of Segovia, Philip I orders the harsh persecution of Calvinists
#1566.4.5 - 'Eedverbond der Edelen', Margaretha of Parma promises leniency
#1567.9.10 - Counts of Egmont & Hoorne arrested
#1569.1.1 - The Duke of Alba reforms the taxation system ('tiende penning')
#1570.1.1 - The Duke of Alba reforms the penal system, 'Blood Council' (Bloedraad) established


namespace = flavor_bur
normal_or_historical_nations = yes


# Ruler of Burgundy Dies
country_event = {
	id = flavor_bur.1
	title = "flavor_bur.EVTNAME1"
	desc = "flavor_bur.EVTDESC1"
	picture = DEATH_OF_HEIR_eventPicture
	
	major = yes
	
	trigger = {
		tag = BUR
		ai = yes
		was_player = no
		NOT = { has_country_flag = burgundian_succession_crisis }
		is_at_war = yes
		is_free_or_tributary_trigger = yes
		is_emperor = no
		government = monarchy
		has_regency = no
		is_female = no
		NOT = { is_year = 1500 }
		capital_scope = {
			continent = europe
		}
		FRA = {
			exists = yes
			is_free_or_tributary_trigger = yes
			num_of_cities = 8
			is_neighbor_of = BUR
		}
		OR = {
			emperor = {
				exists = yes
				NOT = { war_with = FRA }
			}
			emperor = {
				exists = no
			}
		}
	}
	
	mean_time_to_happen = {
		months = 600
		modifier = {
			factor = 1.1
			luck = yes
		}
		modifier = {
			factor = 0.75
			has_heir = no
		}
		modifier = {
			factor = 0.5
			OR = {
				    has_global_flag = cu_realistic_handicap_set
				    has_global_flag = cu_x_handicap_set
			}
		}
		modifier = {
			factor = 0.75
			is_monarch_leader = yes
		}
		modifier = {
			factor = 0.75
			is_heir_leader = yes
		}
		modifier = {
			factor = 0.85
			NOT = { war_score = 0 }
		}
		modifier = {
			factor = 0.75
			NOT = { war_score = -25 }
		}
		modifier = {
			factor = 0.75
			NOT = { war_score = -50 }
		}
		modifier = {
			factor = 0.5
			NOT = { war_score = -75 }
		}
	}
	
	immediate = {
		hidden_effect = {
			set_country_flag = burgundian_succession_crisis
			add_ruler_modifier = {
				name = burgundian_succession_crisis
			}

			#GO THROUGH AND CHECK FOR ELIGIBLE RECIPIENTS. France can only get second part by being emperor.
			#Emperor?
			if = {
				limit = {
					emperor = {
						exists = yes
						num_of_cities = 4
					}
				}
				set_country_flag = bur_emperor_eligible
			}
			#Any HRE monarchy married to BUR? SPA/CAS? Emperor can trigger this one, too.
			if = {
				limit = {
					any_country = {
						marriage_with = ROOT
						num_of_cities = 4
						NOT = {
							tag = FRA
						}
						OR = {
							is_part_of_hre = yes
							tag = SPA
							AND = {
								tag = CAS
								SPA = {
									exists = no
								}
							}
						}
					}
				}
				set_country_flag = bur_marriage_eligible
			}
			if = {
				limit = {
					SPA = {
						exists = yes
						num_of_cities = 6
					}
				}
				set_country_flag = bur_spain_eligible
				set_country_flag = bur_spain_spa
			}
			if = {
				limit = {
					SPA = {
						exists = no
					}
					CAS = {
						num_of_cities = 6
					}
				}
				set_country_flag = bur_spain_eligible
				set_country_flag = bur_spain_cas
			}
			#DONE CHECKING FOR ELIGIBILITY

			#ROLL FOR WHO GETS THE SECOND PART
			#Every possibility
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					has_country_flag = bur_marriage_eligible
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					70 = {
						set_country_flag = bur_marriage_inherits
					}
					10 = {
						set_country_flag = bur_emperor_inherits
					}
					20 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No emperor
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					has_country_flag = bur_marriage_eligible
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					65 = {
						set_country_flag = bur_marriage_inherits
					}
					35 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No marriage
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					NOT = { has_country_flag = bur_marriage_eligible }
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					70 = {
						set_country_flag = bur_emperor_inherits
					}
					30 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No Spain
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					has_country_flag = bur_marriage_eligible
					NOT = { has_country_flag = bur_spain_eligible }
				}
				random_list = {
					70 = {
						set_country_flag = bur_marriage_inherits
					}
					30 = {
						set_country_flag = bur_emperor_inherits
					}
				}
			}
			#No emperor or marriage
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					NOT = { has_country_flag = bur_marriage_eligible }
					has_country_flag = bur_spain_eligible
				}
				set_country_flag = bur_spain_inherits
			}
			#No emperor or Spain
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					has_country_flag = bur_marriage_eligible
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_marriage_inherits
			}
			#No marriage or Spain
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					NOT = { has_country_flag = bur_marriage_eligible }
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_emperor_inherits
			}
			#No possible inheritor
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					NOT = { has_country_flag = bur_marriage_eligible }
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_retains_independence
			}
			#DONE CHOOSING INHERITANCE RECEPIENT
			#CHOOSE WHICH MARRIAGE INHERITS
			if = {
				limit = {
					has_country_flag = bur_marriage_inherits
				}
				if = {
					limit = {
						emperor = {
							marriage_with = ROOT
						}
						emperor = {
							num_of_cities = 8
						}
					}
					emperor = {
						set_country_flag = bur_marriage_successor
					}
				}
				if = {
					limit = {
						NOT = {
							any_country = {
								has_country_flag = bur_marriage_successor
							}
						}
					}
					random_country = {
						limit = {
							marriage_with = ROOT
							OR = {
								is_part_of_hre = yes
								AND = {
									tag = CAS
									SPA = {
										exists = no
									}
								}
								tag = SPA
							}
							num_of_cities = 4
							NOT = { tag = FRA }
						}
						set_country_flag = bur_marriage_successor
					}
				}
				if = {
					limit = {
						NOT = {
							any_country = {
								OR = {
									is_part_of_hre = yes
									AND = {
										tag = CAS
										SPA = {
											exists = no
										}
									}
									tag = SPA
								}
								marriage_with = ROOT
								num_of_cities = 4
								NOT = {
									tag = FRA
								}
							}
						}
					}
					clr_country_flag = bur_marriage_inherits
					set_country_flag = bur_retains_independence
				}
			}
			#DONE CHOOSING MARRIAGE INHERITOR
		}
	}
	
	option = {
		name = "flavor_bur.EVTOPTA1"
		if = {
			limit = {
				has_heir = yes
				has_female_heir = no
			}
			kill_heir = yes
			change_variable = { which = cu_var1 value = -50 }
			cu_change_stability_point = yes
		}
		tooltip = {
			kill_ruler = yes
		}
		hidden_effect = {
			define_ruler = {
				regency = yes
			}
		}
		FRA = {
			country_event = { id = flavor_bur.3 }
		}
	}
}

# Fate of Burgundy
country_event = {
	id = flavor_bur.2
	title = "flavor_bur.EVTNAME2"
	desc = "flavor_bur.EVTDESC2"
	picture = CIVIL_WAR_eventPicture

	major = yes
	
	trigger = {
		tag = BUR
		ai = yes
		was_player = no
		NOT = { has_country_flag = burgundian_succession_crisis }
		is_at_war = no
		is_free_or_tributary_trigger = yes
		is_emperor = no
		NOT = { is_year = 1500 }
		capital_scope = {
			continent = europe
		}
		has_heir = no
		FRA = {
			exists = yes
			is_free_or_tributary_trigger = yes
			num_of_cities = 8
			is_neighbor_of = BUR
		}
		OR = {
			emperor = {
				exists = yes
				NOT = { war_with = FRA }
			}
			emperor = {
				exists = no
			}
		}
	}
	
	mean_time_to_happen = {
		months = 600
		modifier = {
			factor = 1.1
			luck = yes
		}
		modifier = {
			factor = 0.75
			has_heir = no
		}
		modifier = {
			factor = 0.75
			NOT = {
				stability = 0
			}
		}
		modifier = {
			factor = 0.75
			dynasty = "de Bourgogne"
		}
	}
	
	immediate = {
		hidden_effect = {
			set_country_flag = burgundian_succession_crisis
			add_ruler_modifier = {
				name = burgundian_succession_crisis
			}

			#GO THROUGH AND CHECK FOR ELIGIBLE RECIPIENTS. France can only get second part by being emperor.
			#Emperor?
			if = {
				limit = {
					emperor = {
						exists = yes
						num_of_cities = 4
					}
				}
				set_country_flag = bur_emperor_eligible
			}
			#Any HRE monarchy married to BUR? SPA/CAS? Emperor can trigger this one, too.
			if = {
				limit = {
					any_country = {
						marriage_with = ROOT
						num_of_cities = 4
						NOT = {
							tag = FRA
						}
						OR = {
							is_part_of_hre = yes
							tag = SPA
							AND = {
								tag = CAS
								SPA = {
									exists = no
								}
							}
						}
					}
				}
				set_country_flag = bur_marriage_eligible
			}
			if = {
				limit = {
					SPA = {
						exists = yes
						num_of_cities = 6
					}
				}
				set_country_flag = bur_spain_eligible
				set_country_flag = bur_spain_spa
			}
			if = {
				limit = {
					SPA = {
						exists = no
					}
					CAS = {
						num_of_cities = 6
					}
				}
				set_country_flag = bur_spain_eligible
				set_country_flag = bur_spain_cas
			}
			#DONE CHECKING FOR ELIGIBILITY

			#ROLL FOR WHO GETS THE SECOND PART
			#Every possibility
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					has_country_flag = bur_marriage_eligible
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					60 = {
						set_country_flag = bur_marriage_inherits
					}
					20 = {
						set_country_flag = bur_emperor_inherits
					}
					20 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No emperor
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					has_country_flag = bur_marriage_eligible
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					65 = {
						set_country_flag = bur_marriage_inherits
					}
					35 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No marriage
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					NOT = { has_country_flag = bur_marriage_eligible }
					has_country_flag = bur_spain_eligible
				}
				random_list = {
					70 = {
						set_country_flag = bur_emperor_inherits
					}
					30 = {
						set_country_flag = bur_spain_inherits
					}
				}
			}
			#No Spain
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					has_country_flag = bur_marriage_eligible
					NOT = { has_country_flag = bur_spain_eligible }
				}
				random_list = {
					70 = {
						set_country_flag = bur_marriage_inherits
					}
					30 = {
						set_country_flag = bur_emperor_inherits
					}
				}
			}
			#No emperor or marriage
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					NOT = { has_country_flag = bur_marriage_eligible }
					has_country_flag = bur_spain_eligible
				}
				set_country_flag = bur_spain_inherits
			}
			#No emperor or Spain
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					has_country_flag = bur_marriage_eligible
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_marriage_inherits
			}
			#No marriage or Spain
			if = {
				limit = {
					has_country_flag = bur_emperor_eligible
					NOT = { has_country_flag = bur_marriage_eligible }
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_emperor_inherits
			}
			#No possible inheritor
			if = {
				limit = {
					NOT = { has_country_flag = bur_emperor_eligible }
					NOT = { has_country_flag = bur_marriage_eligible }
					NOT = { has_country_flag = bur_spain_eligible }
				}
				set_country_flag = bur_retains_independence
			}
			#DONE CHOOSING INHERITANCE RECEPIENT
			#CHOOSE WHICH MARRIAGE INHERITS
			if = {
				limit = {
					has_country_flag = bur_marriage_inherits
				}
				if = {
					limit = {
						emperor = {
							marriage_with = ROOT
						}
						emperor = {
							num_of_cities = 8
						}
					}
					emperor = {
						set_country_flag = bur_marriage_successor
					}
				}
				if = {
					limit = {
						NOT = {
							any_country = {
								has_country_flag = bur_marriage_successor
							}
						}
					}
					random_country = {
						limit = {
							marriage_with = ROOT
							OR = {
								is_part_of_hre = yes
								AND = {
									tag = CAS
									SPA = {
										exists = no
									}
								}
								tag = SPA
							}
							num_of_cities = 4
							NOT = { tag = FRA }
						}
						set_country_flag = bur_marriage_successor
					}
				}
				if = {
					limit = {
						NOT = {
							any_country = {
								OR = {
									is_part_of_hre = yes
									AND = {
										tag = CAS
										SPA = {
											exists = no
										}
									}
									tag = SPA
								}
								marriage_with = ROOT
								num_of_cities = 4
								NOT = {
									tag = FRA
								}
							}
						}
					}
					clr_country_flag = bur_marriage_inherits
					set_country_flag = bur_retains_independence
				}
			}
			#DONE CHOOSING MARRIAGE INHERITOR
		}
	}
	
	option = {
		name = "flavor_bur.EVTOPTA2"
		if = {
			limit = {
				has_heir = yes
				has_female_heir = no
			}
			kill_heir = yes
			change_variable = { which = cu_var1 value = -50 }
			cu_change_stability_point = yes
		}
		tooltip = {
			kill_ruler = yes
		}
		hidden_effect = {
			define_ruler = {
				regency = yes
			}
		}
		FRA = {
			country_event = { id = flavor_bur.3 }
		}
	}
}



##### FRANCE #####

# Burgundian Succession Crisis
country_event = {
	id = flavor_bur.3
	title = "flavor_bur.EVTNAME3"
	desc = "flavor_bur.EVTDESC3"
	picture = DEATH_OF_HEIR_eventPicture

	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTA3"
		ai_chance = { factor = 100 }
		if = {
			limit = {
				war_with = BUR
			}
			white_peace = BUR
		}
		#GIVE FRENCH PROVINCES TO FRANCE 
		BUR = {
			every_subject_country = {
				every_owned_province = {
					limit = {
						OR = {
							AND = {
								region = france_region
								NOT = { province_id = 1743 }
							}
							province_id = 181 #Rethel
							culture_group = french
						}
						is_part_of_hre = no
					}
					add_core = ROOT
					cede_province = ROOT
					add_local_autonomy = 10
					set_province_flag = bur_succession_province
				}
			}
			every_owned_province = {
				limit = {
					OR = {
						AND = {
							region = france_region
							NOT = { province_id = 1743 }
						}
						province_id = 181 #Rethel
						culture_group = french
					}
					is_part_of_hre = no
				}
				add_core = ROOT
				cede_province = ROOT
				add_local_autonomy = 10
				set_province_flag = bur_succession_province
			}
		}
		#DONE GIVING PROVINCES TO FRANCE
		
		#SEND THE EVENT TO THE OTHER INHERITOR
		# Send on event
		hidden_effect = {
			#Royal Marriage
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_marriage_inherits
					}
				}
				random_country = {
					limit = {
						has_country_flag = bur_marriage_successor
					}
					country_event = { id = flavor_bur.5 }
				}
			}
			#Emperor
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_emperor_inherits
					}
				}
				emperor = {
					country_event = { id = flavor_bur.4 }
				}
			}
			#Spain
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_spain_inherits
					}
				}
				if = {
					limit = {
						BUR = {
							has_country_flag = bur_spain_spa
						}
					}
					SPA = {
						country_event = { id = flavor_bur.6 }
					}
				}
				if = {
					limit = {
						BUR = {
							has_country_flag = bur_spain_cas
						}
					}
					CAS = {
						country_event = { id = flavor_bur.6 }
					}
				}
			}
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_retains_independence
					}
				}
				BUR = {
					country_event = { id = flavor_bur.21 days = 10 }
				}
			}
		}
	}

	option = {
		name = "flavor_bur.EVTOPTB3"
		ai_chance = { factor = 0 }
		add_prestige = -5
		
		# Send on event
		hidden_effect = {
			#Royal Marriage
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_marriage_inherits
					}
				}
				random_country = {
					limit = {
						has_country_flag = bur_marriage_successor
					}
					country_event = { id = flavor_bur.5 }
				}
			}
			#Emperor
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_emperor_inherits
					}
				}
				emperor = {
					country_event = { id = flavor_bur.4 }
				}
			}
			#Spain
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_spain_inherits
					}
				}
				if = {
					limit = {
						BUR = {
							has_country_flag = bur_spain_spa
						}
					}
					SPA = {
						country_event = { id = flavor_bur.19 }
					}
				}
				if = {
					limit = {
						BUR = {
							has_country_flag = bur_spain_spa
						}
					}
					CAS = {
						country_event = { id = flavor_bur.19 }
					}
				}
			}
			if = {
				limit = {
					BUR = {
						has_country_flag = bur_retains_independence
					}
				}
				BUR = {
					country_event = { id = flavor_bur.21 days = 10 }
				}
			}
		}
	}
}


##### Emperor #####

# Burgundian Succession Crisis
country_event = {
	id = flavor_bur.4
	title = "flavor_bur.EVTNAME3"
	desc = "flavor_bur.EVTDESC4"
	picture = DEATH_OF_HEIR_eventPicture

	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTB7"
		ai_chance = { factor = 100 }
		if = {
			limit = {
				war_with = BUR
			}
			white_peace = BUR
		}
		set_country_flag = bur_successor
		BUR = {
			#Absorb subjects
			every_subject_country = {
				limit = {
					ai = yes
					capital_scope = {
						OR = {
							region = france_region 
							culture_group = french
							culture = dutch
							culture = flemish
							is_part_of_hre = yes
						}
					}
				}
				BUR = { inherit = PREV }
			}
			#Done absorbing
			#Pass provinces to new owner
			every_owned_province = {
				if = {
					limit = {
						NOT = { is_core = ROOT }
					}
					set_province_flag = bur_not_core
				}
				add_core = ROOT
			}
			every_owned_province = {
				cede_province = ROOT
				add_local_autonomy = 50
				set_province_flag = bur_succession_province
			}
		}
		
		# Clear flags
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_eligible_france
				clr_country_flag = bur_eligible_emperor
				clr_country_flag = bur_eligible_marriage_neighbor
				clr_country_flag = bur_eligible_marriage
				clr_country_flag = bur_eligible_spain
				clr_country_flag = bur_eligible_the_rest_to_emperor
				clr_country_flag = bur_eligible_neighbor
			}
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB3"
		ai_chance = { factor = 0 }
		add_prestige = -5
		# Clear flags
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_emperor_inherits
				set_country_flag = bur_retains_independence
				country_event = { id = flavor_bur.21 }
			}
		}
	}
}

##### Royal Marriage #####

# Burgundian Succession Crisis
country_event = {
	id = flavor_bur.5
	title = "flavor_bur.EVTNAME3"
	desc = "flavor_bur.EVTDESC5"
	picture = DEATH_OF_HEIR_eventPicture

	is_triggered_only = yes
		
	option = {
		name = "flavor_bur.EVTOPTB7"
		ai_chance = { factor = 100 }
		if = {
			limit = {
				war_with = BUR
			}
			white_peace = BUR
		}
		set_country_flag = bur_successor
		BUR = {
			every_subject_country = {
				limit = {
					ai = yes
					capital_scope = {
						OR = {
							region = france_region 
							culture_group = french
							culture = dutch
							culture = flemish
							is_part_of_hre = yes
						}
					}
				}
				BUR = { inherit = PREV }
			}
			every_owned_province = {
				if = {
					limit = {
						NOT = { is_core = ROOT }
					}
					set_province_flag = bur_not_core
				}
				add_core = ROOT
			}
			every_owned_province = {
				cede_province = ROOT
				add_local_autonomy = 50
				set_province_flag = bur_succession_province
			}
		}
		
		# Clear flags
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_eligible_france
				clr_country_flag = bur_eligible_emperor
				clr_country_flag = bur_eligible_marriage_neighbor
				clr_country_flag = bur_eligible_marriage
				clr_country_flag = bur_eligible_spain
				clr_country_flag = bur_eligible_the_rest_to_emperor
				clr_country_flag = bur_eligible_neighbor
			}
		}		
	}
	option = {
		name = "flavor_bur.EVTOPTB3"
		ai_chance = { factor = 0 }
		add_prestige = -5
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_marriage_inherits
				set_country_flag = bur_retains_independence
				country_event = { id = flavor_bur.21 }
			}
		}
	}
}

##### Spain #####

# Burgundian Succession Crisis
country_event = {
	id = flavor_bur.19
	title = "flavor_bur.EVTNAME3"
	desc = "flavor_bur.EVTDESC5"
	picture = DEATH_OF_HEIR_eventPicture

	is_triggered_only = yes
		
	option = {
		name = "flavor_bur.EVTOPTB7"
		ai_chance = { factor = 100 }
		if = {
			limit = {
				war_with = BUR
			}
			white_peace = BUR
		}
		set_country_flag = bur_successor
		BUR = {
			every_subject_country = {
				limit = {
					ai = yes
					capital_scope = {
						OR = {
							region = france_region 
							culture_group = french
							culture = dutch
							culture = flemish
							is_part_of_hre = yes
						}
					}
				}
				BUR = { inherit = PREV }
			}
			every_owned_province = {
				if = {
					limit = {
						NOT = { is_core = ROOT }
					}
					set_province_flag = bur_not_core
				}
				add_core = ROOT
			}
			every_owned_province = {
				cede_province = ROOT
				add_local_autonomy = 50
				set_province_flag = bur_succession_province
			}
		}
		
		# Clear flags
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_eligible_france
				clr_country_flag = bur_eligible_emperor
				clr_country_flag = bur_eligible_marriage_neighbor
				clr_country_flag = bur_eligible_marriage
				clr_country_flag = bur_eligible_spain
				clr_country_flag = bur_eligible_the_rest_to_emperor
				clr_country_flag = bur_eligible_neighbor
			}
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB3"
		ai_chance = { factor = 0 }
		add_prestige = -10
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_spain_inherits
				set_country_flag = bur_retains_independence
				country_event = { id = flavor_bur.21 }
			}
		}
	}
}

##### Neighbor #####

# Burgundian Succession Crisis
country_event = {
	id = flavor_bur.6
	title = "flavor_bur.EVTNAME3"
	desc = "flavor_bur.EVTDESC6"
	picture = DEATH_OF_HEIR_eventPicture

	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTB7"
		ai_chance = { factor = 100 }
		if = {
			limit = {
				war_with = BUR
			}
			white_peace = BUR
		}
		set_country_flag = bur_successor
		BUR = {
			every_subject_country = {
				limit = {
					ai = yes
					capital_scope = {
						OR = {
							region = france_region 
							culture_group = french
							culture = dutch
							culture = flemish
							is_part_of_hre = yes
						}
					}
				}
				BUR = { inherit = PREV }
			}
			every_owned_province = {
				if = {
					limit = {
						NOT = { is_core = ROOT }
					}
					set_province_flag = bur_not_core
				}
				add_core = ROOT
			}
			every_owned_province = {
				cede_province = ROOT
				add_local_autonomy = 50
				set_province_flag = bur_succession_province
			}
		}
		
		# Clear flags
		hidden_effect = {
			BUR = {
				clr_country_flag = bur_eligible_france
				clr_country_flag = bur_eligible_emperor
				clr_country_flag = bur_eligible_marriage_neighbor
				clr_country_flag = bur_eligible_marriage
				clr_country_flag = bur_eligible_spain
				clr_country_flag = bur_eligible_the_rest_to_emperor
				clr_country_flag = bur_eligible_neighbor
			}
		}
	}
}

# May release previous owner provinces in HRE
country_event = {
	id = flavor_bur.7
	title = "flavor_bur.EVTNAME7"
	desc = "flavor_bur.EVTDESC7"
	picture = DIPLOMACY_eventPicture
	
	trigger = {
		has_country_flag = bur_successor
		NOT = { had_country_flag = { flag = bur_successor days = 180 } }
		capital_scope = {
			is_part_of_hre = yes
		}
		any_owned_province = {
			has_province_flag = bur_succession_province
			has_province_flag = bur_not_core
			is_part_of_hre = yes
			any_core_country = {
				NOT = { tag = ROOT }
				NOT = { tag = BUR }
				exists = yes
				capital_scope = {
					is_part_of_hre = yes
				}
				is_free_or_tributary_trigger = yes
			}
		}
	}
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			clr_country_flag = bur_successor
			every_owned_province = {
				limit = {
					has_province_flag = bur_succession_province
					has_province_flag = bur_not_core
					is_part_of_hre = yes
					any_core_country = {
						NOT = { tag = ROOT }
						NOT = { tag = BUR }
						exists = yes
						capital_scope = {
							is_part_of_hre = yes
						}
						is_free_or_tributary_trigger = yes
					}
				}
				set_province_flag = bur_core_restored_province
				random_core_country = {
					limit = {
						NOT = { tag = ROOT }
						NOT = { tag = BUR }
						exists = yes
						capital_scope = {
							is_part_of_hre = yes
						}
						is_free_or_tributary_trigger = yes
					}
					set_country_flag = bur_core_restored_target
				}
			}
		}
	}
	
	option = {
		name = "flavor_bur.EVTOPTA7"
		ai_chance = { factor = 100 }
		every_owned_province = {
			limit = {
				has_province_flag = bur_core_restored_province
			}
			remove_core = ROOT
			random_core_country = {
				limit = {
					has_country_flag = bur_core_restored_target
				}
				PREV = {
					cede_province = PREV
				}
			}
		}
		every_country = {
			limit = {
				has_country_flag = bur_core_restored_target
			}
			add_opinion = {
				who = ROOT
				modifier = returned_core_to_me
			}
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB7"
		ai_chance = { factor = 0 }
		add_prestige = -25
		if = {
			limit = {
				is_emperor = yes
			}
			add_imperial_influence = -20
		}
		every_country = {
			limit = {
				has_country_flag = bur_core_restored_target
			}
			add_opinion = {
				who = ROOT
				modifier = opinion_angry
			}
		}
	}
}


### Dutch Revolt ###

# This is now the on_start event for dutch revolt disaster
# PROVINCENAME Revolts!
country_event = { # changed from province to country event
	id = flavor_bur.8
	title = "flavor_bur.EVTNAME8"
	desc = "flavor_bur.EVTDESC8"
	picture = ANGRY_MOB_eventPicture
	
	is_triggered_only = yes

	immediate = {
		set_global_flag = dutch_revolt
		set_country_flag = dutch_revolt_target # used in incident
	}
	
	option = {
		name = "flavor_bur.EVTOPTA8"
		
		#add_stability = -2
		random_owned_province = {
			limit = {
				region = low_countries_region
				OR = {
					culture = dutch
					culture = dutch_german
					culture = flemish
					culture = flemish_german
				}
			}
			spawn_rebels = {
				type = nationalist_rebels
				size = 3
				friend = NED
			}
			set_province_flag = ned_rebels_start_flag
		}
		random_owned_province = {
			limit = {
				NOT = { has_province_flag = ned_rebels_start_flag }
				region = low_countries_region
				OR = {
					culture = dutch
					culture = dutch_german
					culture = flemish
					culture = flemish_german
				}
			}
			spawn_rebels = {
				type = nationalist_rebels
				size = 3
				friend = NED
			}
			set_province_flag = ned_rebels_start_flag
			set_province_flag = dutch_revolt
		}
		custom_tooltip = dutch_revolt_tt
		hidden_effect = {
			low_countries_region = {
				limit = {
					owned_by = ROOT
					OR = {
						culture = dutch
						culture = dutch_german
						culture = flemish
						culture = flemish_german
						NOT = { religion = ROOT }
					}
				}
				add_province_modifier = {
					name = "dutch_revolt_modifier"
					duration = -1 # removed via the on_end event
				}
			}
		}
	}
}

# Random rebels event for disaster
# PROVINCENAME Revolts!
country_event = {
	id = flavor_bur.9
	title = "flavor_bur.EVTNAME9"
	desc = "flavor_bur.EVTDESC9"
	picture = ANGRY_MOB_eventPicture
	
	is_triggered_only = yes

	trigger = {
		any_owned_province = {
			region = low_countries_region
			NOT = { controlled_by = REB }
			NOT = { has_province_flag = dutch_revolt }
			NOT = { has_province_flag = no_dutch_revolt }
			OR = {
				culture = dutch
				culture = dutch_german
				culture = flemish
				culture = flemish_german
			}
		}
	}
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					region = low_countries_region
					NOT = { controlled_by = REB }
					NOT = { has_province_flag = dutch_revolt }
					NOT = { has_province_flag = no_dutch_revolt }
					OR = {
						culture = dutch
						culture = dutch_german
						culture = flemish
						culture = flemish_german
					}
				}
				save_event_target_as = dutch_rebels_target
			}
		}
	}

	option = {
		name = "flavor_bur.EVTOPTA9"
		ai_chance = { factor = 100 }
		event_target:dutch_rebels_target = {
			set_province_flag = dutch_revolt
			spawn_rebels = {
				type = nationalist_rebels
				size = 1
				friend = NED
			}
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB9"
		ai_chance = { factor = 0 }
		event_target:dutch_rebels_target = {
			add_local_autonomy = 100
			set_province_flag = no_dutch_revolt
		}
	}
}

# Netherlands Declare Independence!
# ends the disaster by virtue of NED existing
country_event = {
	id = flavor_bur.10
	title = "flavor_bur.EVTNAME10"
	desc = "flavor_bur.EVTDESC10"
	picture = ANGRY_MOB_eventPicture

	major = yes
	is_triggered_only = yes
	fire_only_once = yes
	
	trigger = {
		NOT = { exists = NED }
		is_free_or_tributary_trigger = yes
		num_of_owned_provinces_with = {
			value = 5
			OR = {
				controlled_by = REB
				local_autonomy = 90
			}
			OR = {
				culture = dutch
				culture = dutch_german
				culture = flemish
				culture = flemish_german
			}
		}
	}
	
	immediate = {
		hidden_effect = {
			every_owned_province = {
				limit = {
					region = low_countries_region
					OR = {
						culture = dutch
						culture = dutch_german
						culture = flemish
						culture = flemish_german
						is_core = NED
					}
					is_capital = no
				}
				discover_country = NED
				add_core = NED
				clear_rebels = yes
			}
			release = NED
			NED = {
				add_government_reform = becomes_republic_reform
				add_government_reform = dutch_republic
				change_primary_culture = dutch
			}
			every_owned_province = {
				limit = {
					region = low_countries_region
				}
				add_claim = NED
			}
		}
	}
	
	option = {
		name = "flavor_bur.EVTOPTA10"
		NED = {
			declare_war_with_cb = {
				who = ROOT
				casus_belli = cb_independence_war
			}
		}
		hidden_effect = {
			NED = {
				country_event = { id = flavor_bur.11 days = 1 }
			}
			every_country = {
				limit = {
					NOT = { tag = ROOT }
					NOT = { tag = NED }
					any_owned_province = {
						region = low_countries_region
					}
				}
				country_event = { id = flavor_bur.12 days = 10 }
			}
			# Send messages to rivals allowing them to join
			if = {
				limit = {
					NED = { is_part_of_hre = yes }
					has_dlc = "Emperor"
				}
				every_enemy_country = {
					limit = {
						is_emperor = no
					}
					country_event = { id = flavor_bur.20 days = 1 }
				}
			}
		}
	}
}


# Dutch Mobilization
country_event = {
	id = flavor_bur.11
	title = "flavor_bur.EVTNAME11"
	desc = "flavor_bur.EVTDESC11"
	picture = MILITARY_CAMP_eventPicture
	
	is_triggered_only = yes
	
	option = {
		name = "EXCELLENT"
		NED = {
			capital_scope = {
				build_to_forcelimit = {
					infantry = 0.6
					cavalry = 0.3
					artillery = 0.1
				}
			}
			random_owned_province = {
				limit = {
					has_port = yes
				}
				build_to_forcelimit = {
					heavy_ship = 0.3
					light_ship = 0.3
					transport = 0.2
				}
			}
		}
	}
}

# Dutch Claims
country_event = {
	id = flavor_bur.12
	title = "flavor_bur.EVTNAME12"
	desc = "flavor_bur.EVTDESC12"
	picture = DIPLOMACY_eventPicture
	
	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTA12"
		every_owned_province = {
			limit = {
				region = low_countries_region
			}
			add_claim = NED
		}
	}
}

# Dutch state joins the Netherlands
country_event = {
	id = flavor_bur.16
	title = "flavor_bur.EVTNAME16"
	desc = "flavor_bur.EVTDESC16"
	picture = DIPLOMACY_eventPicture
	
	major = yes
	
	trigger = {
		ai = yes
		was_player = no
		NOT = { tag = NED }
		NED = {
			exists = yes
			ai = yes
			was_player = no
		}
		is_free_or_tributary_trigger = yes
		is_at_war = no
		NOT = { num_of_cities = 5 }
		any_owned_province = {
			region = low_countries_region
		}
		OR = {
				culture = dutch
				culture = flemish
				culture = dutch_german
				culture = flemish_german
				is_core = NED
		}
		NOT = {
			has_country_flag = state_joined_netherlands
		}
	}
	
	mean_time_to_happen = {
		months = 12
	}
	
	option = {
		name = "flavor_bur.EVTOPTA16"
		NED = {
			country_event = { id = flavor_bur.17 days = 1 }
		}
		set_country_flag = state_joined_netherlands
	}
}

# Incorporated into the Netherlands
country_event = {
	id = flavor_bur.17
	title = "flavor_bur.EVTNAME17"
	desc = "flavor_bur.EVTDESC17"
	picture = DIPLOMACY_eventPicture
	
	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTA17"
		FROM = {
			every_owned_province = {
				add_core = NED
			}
		}
		inherit = FROM
	}
}

# PROVINCENAME Revolts!
province_event = {
	id = flavor_bur.18
	title = "flavor_bur.EVTNAME18"
	desc = "flavor_bur.EVTDESC18"
	picture = ANGRY_MOB_eventPicture
	
	trigger = {
		is_year = 1550
		NOT = { is_year = 1650 }
		NED = {
			exists = yes
			ai = yes
			was_player = no
		}
		owner = {
			NOT = { tag = NED }
			NOT = { tag = BGD }
		}
		region = low_countries_region
		OR = {
			culture = dutch
			culture = flemish
			culture = dutch_german
			culture = flemish_german
			is_core = NED
		}
		OR = {
			NOT = { has_province_flag = dutch_revolt }
			had_province_flag = { flag = dutch_revolt days = 1825 }
		}
		owner = {
			OR = {
				capital_scope = {
					NOT = { region = low_countries_region }
				}
				NOT = {
					OR = {
						primary_culture = dutch
						primary_culture = flemish
					}
				}
			}
		}
	}

	mean_time_to_happen = {
		months = 120
		modifier = {
			factor = 0.75
			any_neighbor_province = {
				owned_by = NED
			}
		}
		modifier = {
			factor = 0.75
			any_neighbor_province = {
				has_province_flag = dutch_revolt
			}
		}
		modifier = {
			factor = 0.75
			has_owner_religion = no
		}
		modifier = {
			factor = 0.75
			owner = {
				NOT = { culture_group = ROOT }
			}
		}
		modifier = {
			factor = 0.75
			owner = {
				NOT = { primary_culture = ROOT }
				NOT = { accepted_culture = ROOT }
			}
		}
		modifier = {
			factor = 0.5
			owner = { war_with = NED }
		}
		modifier = {
			factor = 0.75
			unrest = 3
		}
		modifier = {
			factor = 0.75
			unrest = 5
		}
		modifier = {
			factor = 0.75
			unrest = 7
		}
		modifier = {
			factor = 0.75
			unrest = 9
		}
	}

	option = {
		name = "flavor_bur.EVTOPTA18"
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				owner = {
					NOT = { num_of_cities = 5 }
				}
			}
		}
		set_province_flag = dutch_revolt
		spawn_rebels = {
			type = nationalist_rebels
			size = 1
			friend = NED
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB18"
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				owner = {
					num_of_cities = 5
				}
			}
		}
		add_core = NED
		cede_province = NED
	}
}

# Dutch Nobility demands General Estates
country_event = {
	id = flavor_bur.13
	title = "flavor_bur.EVTNAME13"
	desc = "flavor_bur.EVTDESC13"
	picture = DIPLOMACY_eventPicture
	
	fire_only_once = yes
	
	trigger = {
		tag = BUR
		NOT = { exists = NED }
		is_year = 1500
		NOT = { is_year = 1600 }
		
		owns = 1744
		owns = 97
		
		NOT = { primary_culture = dutch }
		
	}
	
	mean_time_to_happen = {
		months = 2000
	}
	
	option = {		# No Concessions
		name = "flavor_bur.EVTOPTA13"
		low_countries_region = {
			limit = {
				owned_by = BUR
			}
			add_unrest = 10
		}
		cu_change_stability_point_n75 = yes
		set_country_flag = harsh_dutch
	}
	option = {		# Lower the taxes
		name = "flavor_bur.EVTOPTB13"
		ai_chance = { factor = 0 }
		
		low_countries_region = {
			limit = {
				owned_by = BUR
			}
			add_local_autonomy = 100
		}
		add_adm_power = -100
	}
}

# The Count of Charolais and the Edict of Blood
country_event = {
	id = flavor_bur.14
	title = "flavor_bur.EVTNAME14"
	desc = "flavor_bur.EVTDESC14"
	picture = ANGRY_MOB_eventPicture
	
	fire_only_once = yes
	
	trigger = {
		tag = BUR
		NOT = { exists = NED }
		has_country_flag = harsh_dutch
		owns = 1744
		owns = 97		
	}
	
	mean_time_to_happen = {
		months = 60
	}
	
	option = {		# No Concessions
		name = "flavor_bur.EVTOPTA14"
		low_countries_region = {
			limit = {
				owned_by = BUR
			}
			add_unrest = 5
		}		
	}
	option = {		# Don't introduce that Consumption Tax
		name = "flavor_bur.EVTOPTB14"
		add_legitimacy = -50
		add_prestige = -20
	}
}

# The Count of Ma�on and the Union of Arras
country_event = {
	id = flavor_bur.15
	title = "flavor_bur.EVTNAME15"
	desc = "flavor_bur.EVTDESC15"
	picture = DIPLOMACY_eventPicture
	
	fire_only_once = yes
	
	trigger = {
		tag = BUR
		religion = catholic
		has_country_flag = harsh_dutch
	}
	
	mean_time_to_happen = {
		months = 60
	}
	
	option = {		# Sign the Union of Arras
		name = "flavor_bur.EVTOPTA15"
		low_countries_region = { 
			limit = {
				owned_by = BUR
				NOT= { religion = catholic }
			}
			add_unrest = 2
			add_local_autonomy = 10
		}
		add_legitimacy = -50
		add_prestige = -10
	}
	option = {		# No Concessions
		name = "flavor_bur.EVTOPTB15"
		low_countries_region = {
			limit = {
				owned_by = BUR
				NOT= { religion = catholic }
			}		
			add_unrest = 10
		}		
	}
}

# Netherland revolters call on the rivals of their enemy
country_event = {
	id = flavor_bur.20
	title = "flavor_bur.EVTNAME20"
	desc = "flavor_bur.EVTDESC20"
	picture = BATTLE_eventPicture
	
	is_triggered_only = yes
	
	option = {
		name = "flavor_bur.EVTOPTA20"
		create_alliance = NED
		set_ai_attitude = {
			who = NED
			attitude = attitude_friendly
		}
		NED = {
			add_opinion = {
				who = ROOT
				modifier = supported_independence
			}
		}
	}
	option = {
		name = "flavor_bur.EVTOPTB20"
		add_prestige = -5
	}
}

#BUR retains independence 
country_event = {
	id = flavor_bur.21
	title = flavor_bur.21.t
	desc = flavor_bur.21.d
	picture = GOOD_WITH_MONARCH_eventPicture

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					OR = {
						has_female_heir = no
						has_regency = yes
					}
				}
				define_ruler = {
					name = "Mary"
					dynasty = "de Bourgogne"
					age = 20
					claim = 95
					female = yes
				}
				if = {
					limit = {
						has_dlc = "Rights of Man" 
					}
					hidden_effect = { add_ruler_personality = kind_hearted_personality }
				}
			}
		}
	}

	option = {
		name = flavor_bur.21.a
		ai_chance = {
			factor = 100
		}
		every_subject_country = {
			limit = {
				capital_scope = {
					OR = {
						region = france_region 
						culture_group = french
						culture = dutch
						culture = flemish
						is_part_of_hre = yes
					}
				}
			}
			add_liberty_desire = 25
		}
	}

	option = {
		name = flavor_bur.21.b
		ai_chance = {
			factor = 0
		}
		every_subject_country = {
			limit = {
				ai = yes
				capital_scope = {
					OR = {
						region = france_region 
						culture_group = french
						culture = dutch
						culture = flemish
						is_part_of_hre = yes
					}
				}
			}
			BUR = { free_vassal = PREV }
			if = {
				limit = {
					government = monarchy
					NOT = { has_reform = celestial_empire }
				}
				random = {
					chance = 20
					add_government_reform = becomes_republic_reform
					add_government_reform = merchants_reform
				}
			}
			if = {
				limit = {
					government = monarchy
					NOT = { has_reform = celestial_empire }
				}
				random = {
					chance = 20
					add_government_reform = becomes_monarchy_reform
			    add_government_reform =  mandate_system
				}
			}
		}
	}
}

# Burgundian Military Reforms
country_event = {
	id = flavor_bur.30
	title = "flavor_bur.30.t"
	desc = "flavor_bur.30.d"
	picture = REFORM_eventPicture
	
	fire_only_once = yes
	
	trigger = {
		tag = BGD
		is_year = 1575
		NOT = { is_year = 1675 }
		mil = 5
	}
	
	mean_time_to_happen = {
		months = 50
	}
	
	option = {
		name = "flavor_bur.30.a" # Reform Army
		add_treasury = -500
		add_mil_power = -100
		add_army_tradition = 20
		add_country_modifier = {
		        name = burgundian_army_reform
				duration = -1
		}
	}
	option = {
		name = "flavor_bur.30.b" # Reform Navy
		add_treasury = -500
		add_dip_power = -100
		add_navy_tradition = 20
		add_country_modifier = {
		        name = burgundian_navy_reform
				duration = -1
		}
	}
	option = {
		name = "flavor_bur.30.c" # We can't afford either
		add_prestige = -2.5
	}
}
